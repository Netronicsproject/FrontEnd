---
openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  "/api/post/{postId}":
    put:
      tags:
        - post-controller
      operationId: updatePost
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
                - post
              type: object
              properties:
                post:
                  "$ref": "#/components/schemas/PostRequestDto"
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PostResponseDto"
  "/api/v1/likes/{postId}":
    post:
      tags:
        - like-controller
      operationId: addLike
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/LikeResponseDto"
    delete:
      tags:
        - like-controller
      operationId: deleteLike
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/profile/new":
    post:
      tags:
        - profile-controller
      operationId: completeUserProfile
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserProfileDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/post":
    get:
      tags:
        - post-controller
      operationId: getAllPosts
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PostSummaryPageDto"
    post:
      tags:
        - post-controller
      operationId: createPost
      requestBody:
        content:
          application/json:
            schema:
              required:
                - post
              type: object
              properties:
                post:
                  "$ref": "#/components/schemas/PostRequestDto"
                files:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/PostResponseDto"
  "/api/post/{postId}/comments":
    get:
      tags:
        - post-controller
      operationId: getComments
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CommentResponseDto"
    post:
      tags:
        - post-controller
      operationId: addComment
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: content
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CommentResponseDto"
  "/api/post/{postId}/comments/{parentCommentId}":
    post:
      tags:
        - post-controller
      operationId: addReply
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: parentCommentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: userId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: content
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/CommentResponseDto"
  "/api/auth/google":
    post:
      tags:
        - auth-controller
      operationId: authenticateWithGoogle
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GoogleTokenRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: object
  "/api/v1/likes/":
    get:
      tags:
        - like-controller
      operationId: likeList
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LikeResponseDto"
  "/api/post/{postId}/images":
    get:
      tags:
        - post-controller
      operationId: getImages
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FileResponseDto"
  "/api/post/{postId}/attachments":
    get:
      tags:
        - post-controller
      operationId: getAttachments
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FileResponseDto"
  "/api/post/{postId}/attachments/{fileId}":
    get:
      tags:
        - post-controller
      operationId: downloadAttach
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: fileId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                type: string
                format: binary
  "/api/post/comments/{commentId}":
    delete:
      tags:
        - post-controller
      operationId: deleteComment
      parameters:
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    PostRequestDto:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        fileType:
          type: string
          enum:
            - IMAGE
            - ATTACH
    CommentResponseDto:
      type: object
      properties:
        commentId:
          type: integer
          format: int64
        content:
          type: string
        author:
          type: string
        createdAt:
          type: string
          format: date-time
    FileResponseDto:
      type: object
      properties:
        fileId:
          type: integer
          format: int64
        filePath:
          type: string
        fileName:
          type: string
    LikeResponseDto:
      type: object
      properties:
        likeId:
          type: integer
          format: int64
        postId:
          type: integer
          format: int64
        username:
          type: string
    PostResponseDto:
      type: object
      properties:
        postId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        author:
          type: string
        files:
          type: array
          items:
            "$ref": "#/components/schemas/FileResponseDto"
        comments:
          type: array
          items:
            "$ref": "#/components/schemas/CommentResponseDto"
        likes:
          type: array
          items:
            "$ref": "#/components/schemas/LikeResponseDto"
    UserProfileDto:
      type: object
      properties:
        picture:
          type: string
        introduce:
          type: string
        userName:
          type: string
    GoogleTokenRequest:
      type: object
      properties:
        idToken:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PostSummaryDto:
      type: object
      properties:
        postId:
          type: integer
          format: int64
        title:
          type: string
        content:
          type: string
        author:
          type: string
        commentCount:
          type: integer
          format: int32
        likeCount:
          type: integer
          format: int32
    PostSummaryPageDto:
      type: object
      properties:
        content:
          type: array
          items:
            "$ref": "#/components/schemas/PostSummaryDto"
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        first:
          type: boolean
        last:
          type: boolean
